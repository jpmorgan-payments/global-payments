# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Digital Signature Tests

on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
env:
  PUBLIC: ${{ secrets.PUBLIC }}
  PRIVATE: ${{ secrets. PRIVATE }}

permissions:
  contents: read

jobs:
  test-python:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./digital-signature-creation/python
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Test with pytest
        run: |
          pytest
  test-js:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./digital-signature-creation/js
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: "./digital-signature-creation/js/yarn.lock"
      - run: yarn install --frozen-lockfile
      - run: yarn test
  test-go:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./digital-signature-creation/go
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: ">=1.19.0"
      - run: go test
  test-java:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./digital-signature-creation/java
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots package
